include ..\model\lists

#############################################
#### Parameters
#################################################
include parameters

ADJUST_phi_NewAUTO := 0.5

R_I_AUTO[ecl,cea] := R + 0.03 

R_SUB_AUTO[ecl,cea] := 0
R_CASH_AUTO[ecl,cea] := 0.8
R_LOAN_AUTO[ecl,cea] := 1 - R_CASH_AUTO[ecl,cea]

AUTO_D[ecl,cea] := 12.85

LD_AUTO[ecl,cea] := 6
R_RMBS_AUTO[ecl,cea] := 1/LD_AUTO[ecl,cea]


ADJUST_GR_PE_AUTO_e_1 := 0.2


# Parameters of the Bass diffusion model

imitation[ecl] := 0.078
ES_BASS[ecl] := 1
nu_diffusion[ecl] := 7.82


#############################################
#### Link with the rest of the model
#################################################

### TO BE COMMENTED when linked with the full model
eps := 0.000000000001
P 		 :=  1 * (1 + GR_PRICES) ^ (@year - %baseyear)

CH[crai] := 4179 * (1 + GR_REAL) ^ (@year - %baseyear)
CH[croa] := 9238 * (1 + GR_REAL) ^ (@year - %baseyear)
CH[cair] := 7336 * (1 + GR_REAL) ^ (@year - %baseyear)
  



CH[cele] := 17844 * (1 + GR_REAL) ^ (@year - %baseyear)
CH[cgas] := 10467 * (1 + GR_REAL) ^ (@year - %baseyear)
CH[coil] := 43742 * (1 + GR_REAL) ^ (@year - %baseyear)

PCH[cair] := P
PCH[crai] := P
PCH[croa] := P


PCH[cea] := P

PCH[cveh] := P

DISPINC_AT_VAL := 1000000 * (1 + GR_NOMI) ^ (@year - %baseyear)

PCH := P

### END TO BE COMMENTED when linked with the full model

NCH_AUTO[cele] := CH[cele] * 0.01
NCH_AUTO[coil] := CH[coil] * 0.8
NCH_AUTO[cgas] := CH[cgas] * 0.05

NCH[cth] := CH[cth] * 1.0

NCH[cveh] := @elem(PNewAUTO*NewAUTO + UC_M_AUTO*AUTO, %baseyear) * (1 + GR_REAL) ^ (@year - %baseyear) 

#######################################
#####  Round 0: load primary date for transport block
###################################### 

CH_AUTO[cele] := @elem(NCH_AUTO[cele],%baseyear)
CH_AUTO[coil] := @elem(NCH_AUTO[coil],%baseyear) 
CH_AUTO[cgas] := @elem(NCH_AUTO[cgas],%baseyear)


AUTO[ecl,cele]  := TRANSPORT(10, $ecl)
AUTO[ecl,coil]  := TRANSPORT(11, $ecl)
AUTO[ecl,cgas]  := TRANSPORT(12, $ecl)

km_AUTO_LD := TRANSPORT(18, 9)
km_AUTO_SD := TRANSPORT(19, 9)

km_AUTO[ecl,cele]    := TRANSPORT(20, $ecl)
km_AUTO[ecl,coil] := TRANSPORT(21, $ecl)
km_AUTO[ecl,cgas] := TRANSPORT(22, $ecl)


km_trav_auto_LD	  := TRANSPORT(24, 9)
km_trav_auto_SD	  := TRANSPORT(25, 9)	
Km_traveler[crai] := TRANSPORT(26, 9)  
Km_traveler[croa] := TRANSPORT(28, 9)  	
Km_traveler[cair] := TRANSPORT(30, 9)  

NewAUTO[ecl,cele]  := TRANSPORT(36, $ecl)

NewAUTO[ecl,coil]  := TRANSPORT(38, $ecl)
NewAUTO[ecl,cgas]  := TRANSPORT(39, $ecl)

overcost_elec :=  3000 / 1000 * (1 + GR_PRICES) ^ (@year - %baseyear)     # Value 2015 in ThreeME V2
Pbattery 	  := 14875 / 1000 * (1 + GR_PRICES) ^ (@year - %baseyear)     # Value 2015 in ThreeME V2

delta_AUTO[ecl,cele,DES] := TRANSPORT(44, $ecl) 
delta_AUTO[ecl,coil,DES] := TRANSPORT(45, $ecl)  
delta_AUTO[ecl,cgas,DES] := TRANSPORT(46, $ecl) 

CH_AUTO_toe[ecl,cele] := TRANSPORT(48, $ecl)
CH_AUTO_toe[ecl,coil] := TRANSPORT(49, $ecl)
CH_AUTO_toe[ecl,cgas] := TRANSPORT(50, $ecl)

overcost_elec[ecl] :=  TRANSPORT(52, $ecl) / 1000 * (1 + GR_PRICES) ^ (@year - %baseyear)    
Pbattery[ecl] 	  := TRANSPORT(53, $ecl) / 1000 * (1 + GR_PRICES) ^ (@year - %baseyear)     

PNewAUTO[ecl,coil]  := TRANSPORT(55, $ecl) / 1000 * (1 + GR_PRICES) ^ (@year - %baseyear)
PNewAUTO[ecl,cgas]  := TRANSPORT(56, $ecl) / 1000 * (1 + GR_PRICES) ^ (@year - %baseyear)

MCperkm[ecl,cele] := TRANSPORT(58, $ecl)
MCperkm[ecl,coil] := TRANSPORT(59, $ecl)
MCperkm[ecl,cgas] := TRANSPORT(60, $ecl)

#######################################
#####  Construct data directly from model equation
###################################### 
P_km_trav_auto * km_trav_auto := P_km_trav_auto_LD * km_trav_auto_LD + P_km_trav_auto_SD * km_trav_auto_SD

km_trav_auto := km_trav_auto_LD + km_trav_auto_SD

P_km_trav_auto_SD * km_trav_auto_SD := P_km_AUTO * km_AUTO_SD / 1000

P_km_trav_auto_LD * km_trav_auto_LD := P_km_AUTO * km_AUTO_LD / 1000

P_km_traveler_LD * km_traveler_LD := P_km_traveler[crai] * km_traveler[crai] + P_km_trav_auto_LD * km_trav_auto_LD

P_km_traveler_SD * km_traveler_SD := P_km_traveler[croa] * km_traveler[croa] + P_km_trav_auto_SD * km_trav_auto_SD

phi_km_trav_auto_LD := P_km_trav_auto_LD * km_trav_auto_LD / (P_km_traveler_LD * km_traveler_LD)

phi_km_trav_auto_SD := P_km_trav_auto_SD * km_trav_auto_SD / (P_km_traveler_SD * km_traveler_SD)

km_AUTO := km_AUTO_LD + km_AUTO_SD

NewAUTO[th] := NewAUTO - NewAUTO[cele]

AUTO[ecl,cea,DES] := delta_AUTO[ecl,cea,DES]*AUTO[ecl,cea]{-1}

AUTO[ecl,th,DES] := AUTO[ecl,coil,DES] + AUTO[ecl,cgas,DES] 

AUTO[ecl,DES] := AUTO[ecl,cele,DES] + AUTO[ecl,th,DES]

AUTO[DES] := sum(AUTO[ecl, DES] on ecl)

AUTO[ecl] := AUTO[ecl,cele] + AUTO[ecl,th]

AUTO[cea] := sum(AUTO[ecl,cea] on ecl)

AUTO[th] := sum(AUTO[ecl,th] on ecl)

AUTO[cea,DES] := sum(AUTO[ecl,cea,DES] on ecl)

AUTO[th,DES] := sum(AUTO[ecl,th,DES] on ecl)

AUTO[ecl,th]  := AUTO[ecl,coil] + AUTO[ecl,cgas]

km_AUTO[cele] := km_AUTO * AUTO[cele] / AUTO
km_AUTO[th] := km_AUTO - km_AUTO[cele]

CH_AUTO_toe[cea] := sum(CH_AUTO_toe[ecl,cea] on ecl)

km_AUTO[ecl] := sum(km_AUTO[ecl,cea] on cea)

SUM_EXP_U_AUTO := sum(EXP(U_AUTO[ecl]) on ecl)


UC_AUTO[ecl] := UC_K_AUTO[ecl] + UC_E_AUTO[ecl] + UC_M_AUTO[ecl]	

UC_AUTO[ecl,cea] := UC_K_AUTO[ecl,cea] + UC_E_AUTO[ecl,cea] + UC_M_AUTO[ecl,cea] 

UC_AUTO[ecl,th] := UC_K_AUTO[ecl,th] + UC_E_AUTO[ecl,th] + UC_M_AUTO[ecl,th] 

UC_K_AUTO[ecl] * AUTO[ecl] := UC_K_AUTO[ecl,cele] * AUTO[ecl,cele] + UC_K_AUTO[ecl,th] * AUTO[ecl,th] 

UC_K_AUTO[ecl,th] * AUTO[ecl,th] := UC_K_AUTO[ecl,coil] * AUTO[ecl,coil] + UC_K_AUTO[ecl,cgas] * AUTO[ecl,cgas]

UC_E_AUTO[ecl] * AUTO[ecl] := UC_E_AUTO[ecl,cele] * AUTO[ecl,cele] + UC_E_AUTO[ecl,th] * AUTO[ecl,th] 

UC_E_AUTO[ecl,th] * AUTO[ecl,th] := UC_E_AUTO[ecl,coil] * AUTO[ecl,coil] + UC_E_AUTO[ecl,cgas] * AUTO[ecl,cgas]

UC_E_AUTO[ecl,cea] := PE_AUTO[ecl,cea] * ((1 + GR_PE_AUTO_e[ecl,cea]) ^ AUTO_D[ecl,cea] - 1) / (GR_PE_AUTO_e[ecl,cea] * AUTO_D[ecl,cea]) 

UC_K_AUTO[ecl,cea] := (1 - R_SUB_AUTO[ecl,cea]) * PNewAUTO[ecl,cea] / AUTO_D[ecl,cea] * (R_CASH_AUTO[ecl,cea] +   _
      R_LOAN_AUTO[ecl,cea] * R_I_AUTO[ecl,cea]{-1} * LD_AUTO[ecl,cea] / ( 1 - ( 1 + R_I_AUTO[ecl,cea]{-1} )^( - LD_AUTO[ecl,cea] ) ) )

EXP_AUTO_VAL[ecl] := sum(EXP_AUTO_VAL[ecl,cea] on cea)

EXP_AUTO_VAL[cea] := sum(EXP_AUTO_VAL[ecl,cea] on ecl)

EXP_AUTO_VAL := sum(EXP_AUTO_VAL[ecl] on ecl)

PNewAUTO[ecl,cele] := PNewAUTO[ecl,coil] + Pbattery + overcost_elec

PNewAUTO[ecl]*NewAUTO[ecl] := PNewAUTO[ecl,cele] * NewAUTO[ecl,cele] + PNewAUTO[ecl,th] * NewAUTO[ecl,th]

PNewAUTO[ecl,th] * NewAUTO[ecl,th] := PNewAUTO[ecl,coil] * NewAUTO[ecl,coil] + PNewAUTO[ecl,cgas] * NewAUTO[ecl,cgas]

PNewAUTO * NewAUTO := sum(PNewAUTO[ecl] * NewAUTO[ecl] on ecl)

UC_M_AUTO[ecl,cea] := PCH[cveh] * MCperkm[ecl,cea]/100*kmPerAuto/1000

UC_M_AUTO[ecl] * AUTO[ecl] := UC_M_AUTO[ecl,cele] * AUTO[ecl,cele] + UC_M_AUTO[ecl,th] * AUTO[ecl,th] 			if AUTO[ecl] <> 0

UC_M_AUTO[ecl,th] * AUTO[ecl,th] := UC_M_AUTO[ecl,coil] * AUTO[ecl,coil] + UC_M_AUTO[ecl,cgas] * AUTO[ecl,cgas]	if AUTO[ecl,th] <> 0

UC_AUTO * AUTO := sum(UC_AUTO[ecl] * AUTO[ecl] on ecl)	  if AUTO <> 0

UC_K_AUTO * AUTO := sum(UC_K_AUTO[ecl] * AUTO[ecl] on ecl) if AUTO <> 0

UC_E_AUTO * AUTO := sum(UC_E_AUTO[ecl] * AUTO[ecl] on ecl) if AUTO <> 0

UC_M_AUTO * AUTO := sum(UC_M_AUTO[ecl] * AUTO[ecl] on ecl) if AUTO <> 0

#######################################
#####  Special data: not from model equation
###################################### 

P_km_AUTO := @elem(EXP_AUTO_VAL * 1000 / km_AUTO, %baseyear) * (1 + GR_PRICES) ^ (@year - %baseyear)

DEBT_AUTO_VAL[ecl,cea] := @elem(R_LOAN_AUTO[ecl,cea] * ( 1 + GR_NOMI ) / ( GR_NOMI + R_RMBS_AUTO[ecl,cea] ) * PNewAUTO[ecl,cea] * NewAUTO[ecl,cea], %baseyear) * ( 1 +  GR_NOMI) ^ ( @year - %baseyear )


EXP_AUTO_VAL[ecl,cea] := @elem(DEBT_AUTO_VAL[ecl,cea]{-1} * ( R_I_AUTO[ecl,cea]{-1} + R_RMBS_AUTO[ecl,cea]{-1} ) _
                                + R_CASH_AUTO[ecl,cea] * PNewAUTO[ecl,cea] * NewAUTO[ecl,cea] * ( 1 - R_SUB_AUTO[ecl,cea] ) _
                                + PCH[cea] * CH_AUTO[cea] * CH_AUTO_toe[ecl,cea] / CH_AUTO_toe[cea] _
                                + UC_M_AUTO[ecl,cea] * AUTO[ecl,cea] , %baseyear) * ( 1 +  GR_NOMI) ^ ( @year - %baseyear )

GR_PE_AUTO_e[ecl,cea] := GR_PRICES

PE_AUTO[ecl,cea] * (AUTO[ecl,cea] + eps) := PCH[cea] * (CH_AUTO[cea] * CH_AUTO_toe[ecl,cea] / CH_AUTO_toe[cea] + eps)

travperauto_LD := 1000*km_trav_auto_LD/km_AUTO_LD
travperauto_SD := 1000*km_trav_auto_SD/km_AUTO_SD

km_traveler_LD := km_traveler[crai] + km_trav_auto_LD
km_traveler_SD := km_traveler[croa] + km_trav_auto_SD

P_km_traveler[crai] * km_traveler[crai] := PCH[crai] * @elem(NCH[crai],%baseyear)

P_km_traveler[croa] * km_traveler[croa] := PCH[croa] * @elem(NCH[croa],%baseyear)

P_km_traveler[cair] * km_traveler[cair] := PCH[cair] * @elem(NCH[cair],%baseyear)

AUTO := sum(AUTO[ecl] on ecl)

AUTObis := AUTO

km_AUTObis := km_AUTO

NewAUTO[ecl] := NewAUTO[ecl,cele] + NewAUTO[ecl,th]

NewAUTO[ecl,th] := NewAUTO[ecl,coil] + NewAUTO[ecl,cgas]

NewAUTO_bis[ecl,th] := NewAUTO[ecl,th]

NewAUTO := sum(NewAUTO[ecl] on ecl)

NewAUTO[cele] := sum(NewAUTO[ecl,cele] on ecl)

kmPerAuto := km_AUTO / AUTO


phi_NewAUTO[ecl] := NewAUTO[ecl] / NewAUTO

phi_NewAUTO[ecl,cele] := NewAUTO[ecl,cele] / NewAUTO[ecl] 

phi_NewAUTO[ecl,coil] := NewAUTO[ecl,coil]/NewAUTO[ecl,th] 

U_AUTO[ecl] := log(phi_NewAUTO[ecl])

phi_NewAUTO_n[ecl] := phi_NewAUTO[ecl]
phi_NewAUTO_n[ecl,cele] := phi_NewAUTO[ecl,cele]

phi_NewAUTO_targ[ecl,cele] := phi_NewAUTO[ecl,cele]
innovation_exo[ecl] := d(phi_NewAUTO_targ[ecl,cele]) / (1-phi_NewAUTO_n[ecl,cele]{-1}) - (innovation[ecl] + imitation[ecl] * phi_NewAUTO_n[ecl,cele]{-1}) 
innovation[ecl] := 0

toePerKm[ecl,cea] := CH_AUTO_toe[ecl,cea] / km_AUTO[ecl,cea]

EXP_AUTO_VALbis := EXP_AUTO_VAL

UC_AUTObis := UC_AUTO

verif_UC_AUTObis  := 0

verif_EXP_AUTO_VALbis := 0
verif_AUTObis  := 0
verif_NewAUTObis[ecl,th] := 0
verif_km_AUTObis := 0
verif_phi_NewAUTO[ecl] := 0
