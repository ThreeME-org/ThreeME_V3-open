include ..\model\lists


#############################################
#### Link with the rest of the model
#################################################

### TO BE COMMENTED when linked with the full model
include parameters

eps := 0.000000000001

P 		 :=  1 * (1 + GR_PRICES) ^ (@year - %baseyear)

PCH[ceb] := P

PCH[CCON]:= P

CH[ccoa] := 89.463215033    * (1 + GR_REAL) ^ (@year - %baseyear)
CH[cfuh] := 324.95231566 * (1 + GR_REAL) ^ (@year - %baseyear)
CH[cgas] := 3969.95874284 * (1 + GR_REAL) ^ (@year - %baseyear)
CH[cele] := 27385.063664725 * (1 + GR_REAL) ^ (@year - %baseyear)
CH[chea] := 3951.03275349 * (1 + GR_REAL) ^ (@year - %baseyear)
CH[cbio] := 51.03275349 * (1 + GR_REAL) ^ (@year - %baseyear)

POP := 72462.64550252939 * (1 + GR_POP) ^ (@year - %baseyear)

DISPINC_AT_VAL := 1362573.016990683 * (1 + GR_NOMI) ^ (@year - %baseyear)

PCH := P

### END TO BE COMMENTED when linked with the full model

# Share of household's energy consumption used by buildings
NCH_BUIL[ccoa] := CH[ccoa] * 0.0
NCH_BUIL[cfuh] := CH[cfuh] * 1.0
NCH_BUIL[cgas] := CH[cgas] * 0.95
NCH_BUIL[cele] := CH[cele] * 0.8
NCH_BUIL[chea] := CH[chea] * 1.0
NCH_BUIL[cbio] := CH[cbio] * 1.0

@over NCH[ccon] := @elem(PNewBUIL * NewBUIL + PREHAB * REHAB, %baseyear) * ( 1 +  GR_REAL) ^ (@year - %baseyear)

# Share of household's energy consumption used by automobiles
NCH_AUTO[cele] := CH[cele] * 0.2
NCH_AUTO[cgas] := CH[cgas] * 0.05

@over NCH[c] := NCH_BUIL[c] + NCH_AUTO[c] where c in cele cgas


#######################################
######################################
# Round 0 for Housing block: hypothesis specific to the housing block

rho_M2_DISPINC := 0

# Subsidy rate
R_SUB[ecl,ecl2] := 0

ADJUST0_tau_REHAB := 0.5

ADJUST_phi_REHAB := 0.5

RHO_U_GAIN[ecl,ecl2] := 1

# Share of housing investment paid cash
# For (maintaining) a building of ecl in the same class
R_CASH[ecl]  := 0.5
# For rehabilitating a class ecl building in a more efficient class
R_CASH_REHAB[ecl] := R_CASH[ecl]
# For new buildings
R_CASH_NewBUIL[ecl] := 0.2

# Interest rate paid housing investment
# For (maintaining) a building of ecl in the same class
R_I_BUIL[ecl] := R + 0.01

# For rehabilitating a class ecl building in a more efficient class
R_I_REHAB[ecl] := R_I_BUIL[ecl]
# For new buildings
R_I_NewBUIL[ecl] := R_I_BUIL[ecl]

# Loan duration for housing investment
# For (maintaining) a building of ecl in the same class
LD[ecl] := 25
# For rehabilitating a class ecl building in a more efficient class
LD_REHAB[ecl] := LD[ecl]
LD_NewBUIL[ecl] := LD[ecl]

R_RMBS_REHAB[ecl] := 1 / LD_REHAB[ecl]
R_RMBS_NewBUIL[ecl] := 1 / LD_NewBUIL[ecl]

# Life duration for a class ecl building
BUIL_D[ecl] := 25

# Life duration for a class ecl building (after rehabilitation)
# USE DIRECTLTY BUIL_D ?
REHAB_D[ecl] := BUIL_D[ecl]

# Adjustements
ADJUST_GR_PENER_m2_e_1 := 0.2

## From R / Excel

M2perHOUSING := 91.35039201

# Number of square meter per inhabitant
M2perCapita := 37.8748670376437

eta_ENERperM2[ecl, ceb] := 0.2

ES_BUILNRJ[ecl, ceb, cebb] := 0.8

# Proportion of rehabilitated building from the class ecl's
tau_REHAB[ecl] := BUILDING(1, $ecl)

# Maximum proportion of rehabilitated building from the class ecl's
tau_REHAB_MAX[ecl] := BUILDING(3, $ecl)

# Minimum proportion of rehabilitated building from the class ecl's
tau_REHAB_MIN[ecl] := BUILDING(2, $ecl)

# Switching speed between the 2 regimes of the logistic function
sigma[ecl] := BUILDING(4, $ecl)


BUIL[ecl] := BUILDING(39, $ecl)

phi_NewBUIL[ecl] := BUILDING(8, $ecl)

PREHAB[ecl,ecl2] := BUILDING(28+$ecl, $ecl2) / M2perHOUSING / 1000000 * P

PNEWBUIL[ecl] := BUILDING(37, $ecl) / 1000000 * P

Rdep_BUIL[ecl,bcl] := BUILDING(19 + $ecl, $bcl)
phi_REHAB[ecl,ecl2] := BUILDING(10 + $ecl, $ecl2)

ENER_BUIL[ecl, ceb] := BUILDING(41 + $ceb, $ecl)

CH_ENER_BUIL[ecl, ceb] := @elem(NCH_BUIL[ceb], %baseyear) * ENER_BUIL[ecl, ceb]/(ENER_BUIL[ceb] + eps)

ENER_BUIL[ceb] := sum(ENER_BUIL[ecl, ceb] on ecl)

# Needed for conditionnality in next round
REHAB[ecl,ecl2] := (phi_REHAB[ecl,ecl2]*tau_REHAB[ecl]*BUIL[ecl]{-1})

REHAB[ecl] := sum(REHAB[ecl,ecl2] on ecl2)



###################################################################################
## Special data (inversion of eq. / modification of the equation / alias)
###################################################################################

BUIL := sum(BUIL[ecl] on ecl)
BUILbis := BUIL


phi_REHAB_n[ecl,ecl2] := phi_REHAB[ecl,ecl2]

tau_REHAB_N[ecl] := tau_REHAB[ecl]

tau_REHAB_trend[ecl] := tau_REHAB[ecl]

GR_PENER_m2_e[ecl] := GR_PRICES

UC_K_REHABbis[ecl] := UC_K_REHAB[ecl]


DEBT_REHAB_Val[ecl] := @elem(R_LOAN_REHAB[ecl] * ( 1 + GR_NOMI ) / ( GR_NOMI + R_RMBS_REHAB[ecl] ) * PREHAB[ecl] * REHAB[ecl], %baseyear) * ( 1 +  GR_NOMI) ^ ( @year - %baseyear )


DEBT_NewB_Val[ecl] := @elem(R_LOAN_NewBUIL[ecl] * ( 1 + GR_NOMI ) / ( GR_NOMI + R_RMBS_NewBUIL[ecl] ) * PNewBUIL[ecl] * NewBUIL[ecl], %baseyear) * ( 1 +  GR_NOMI) ^ ( @year - %baseyear )




EXP_HOUSING_Val[ecl] := @elem( DEBT_REHAB_Val[ecl]{-1} * (R_I_REHAB[ecl]{-1} + R_RMBS_REHAB[ecl]{-1} ) _
                                                      + R_CASH_REHAB[ecl] * PREHAB[ecl] * REHAB[ecl] _
                                                      + DEBT_NewB_Val[ecl]{-1} * ( R_I_NewBUIL[ecl]{-1} + R_RMBS_NewBUIL[ecl]{-1} ) _
                                                      + R_CASH_NewBUIL[ecl] * PNewBUIL[ecl] * NewBUIL[ecl] _
                                                      + PENER_BUIL[ecl] * ENER_BUIL[ecl] , %baseyear) * ( 1 +  GR_NOMI) ^ ( @year - %baseyear )


ENERperM2[ ecl, ceb] := ENER_BUIL[ ecl, ceb] / BUIL[ ecl]


PENER_BUIL[ecl, ceb] := PCH[ceb] * (CH_ENER_BUIL[ecl, ceb] + eps)/ (ENER_BUIL[ecl, ceb] + eps)
# Use of eps to avoid a conditionality in Exception_housing_data_if (For some reason the compilator does not recognize it whereas it was working in a previous version).
# PENER_BUIL[ecl, ceb] := if(ENER_BUIL[ecl, ceb] <> 0 , PEXP[ceb] * CH_ENER_BUIL[ecl, ceb] / ENER_BUIL[ecl, ceb], P)


# Calibrated such that tau_REHAB_n[ecl] is at its baseyear value for the baseyear Payback_REHAB[ecl].
tau[ecl] := sigma[ecl]*Payback_REHAB[ecl] + log((tau_REHAB_MIN[ecl]-tau_REHAB_MAX[ecl])/(tau_REHAB[ecl]-tau_REHAB_MAX[ecl])-1)

# First derivative of the rehabilitation rate (tau_REHAB_MIN[ecl]) with respect to the log of payback time (Payback_REHAB[ecl])
nu_REHAB[ecl] := (tau_REHAB_MAX[ecl] - tau_REHAB_MIN[ecl]) * sigma[ecl] * Payback_REHAB[ecl] * EXP(tau[ecl] - sigma[ecl] * Payback_REHAB[ecl]) / (1 + EXP(tau[ecl] - sigma[ecl] * Payback_REHAB[ecl]))^2

PREHAB[ecl] := (sum((1 - R_SUB[ecl,ecl2])*PREHAB[ecl,ecl2]*REHAB[ecl,ecl2] on ecl2) ) / (REHAB[ecl] + eps)



SUBST_NRJperM2[ecl, ceb] := 0

# Prices

PCH_ENER_BUIL[ ecl] := P
PENER[ ecl] := P
PENER  := P

# Verif
Verif_BUILbis := 0
Verif_phi_REHAB[ecl] := 0
Verif_HYBRID := 0

verif_UC_K_REHAB[ecl] := 0

###################################################################################
## Directly from equations
###################################################################################
### But without the conditionality on the year !!!!
NewBUIL[ecl] :=   phi_NewBUIL[ecl] * (d(BUIL) + BUIL[DES])


DEP_BUIL[ecl,bcl] := Rdep_BUIL[ecl,bcl]*BUIL[ecl]{-1}


BUIL[DES] := sum(DEP_BUIL[ecl,DES] on ecl)


@pv NEWBUIL := sum(NEWBUIL[ecl] on ecl)


GAIN_REHAB[ecl,ecl2] := (UC_E[ecl] - UC_E[ecl2]) - UC_K_REHAB[ecl,ecl2]


UC_REHAB[ecl] := UC_K_REHAB[ecl] + UC_E_REHAB[ecl]

UC_E_REHAB[ecl] := sum(phi_REHAB[ecl,ecl2]*UC_E[ecl2] on ecl2)


UC[ecl] := UC_K[ecl] + UC_E[ecl]

UC_K_REHAB[ecl] := PREHAB_delta[ecl] * ( R_CASH_REHAB[ecl] + R_LOAN_REHAB[ecl] * R_I_REHAB[ecl]{-1} * LD_REHAB[ecl] / _
                                               ( 1 - ( 1 + R_I_REHAB[ecl]{-1})^( -LD_REHAB[ecl] ) ) )



UC_K[ecl] := ( PREHAB[ecl,ecl] / BUIL_D[ecl] ) * (R_CASH[ecl] + R_LOAN[ecl] * R_I_BUIL[ecl]{-1} * LD[ecl] / _
                 ( 1 - ( 1 + R_I_BUIL[ecl]{-1}) ^( -LD[ecl] ) ) )

R_LOAN[ecl] := 1 - R_CASH[ecl]

UC_E[ ecl] := PENER_m2[ ecl] * ( ((1 + GR_PENER_m2_e[ ecl]) ^ BUIL_D[ ecl] - 1) / (GR_PENER_m2_e[ ecl] * BUIL_D[ ecl]) )

PENER_m2[ecl]  := PENER_BUIL[ecl] * ENER_BUIL[ecl]/BUIL[ecl]

PREHAB_delta[ecl] := sum( (1 - R_SUB[ecl,ecl2]) * PREHAB[ecl,ecl2] * phi_REHAB[ecl,ecl2] / REHAB_D[ecl2]  on ecl2)

UC_K_REHAB[ecl,ecl2] := (1 - R_SUB[ecl,ecl2]) * (PREHAB[ecl,ecl2] / REHAB_D[ecl2] * ( R_CASH_REHAB[ecl] + R_LOAN_REHAB[ecl] * R_I_REHAB[ecl]{-1} * LD_REHAB[ecl] / ( 1 - ( 1 + R_I_REHAB[ecl]{-1})^( -LD_REHAB[ecl] ) ) ))


EXP_HOUSING_Val := sum(EXP_Housing_Val[ecl] on ecl)

EXP_REHAB_VAL := PREHAB * REHAB

EXP_NEWBUIL_VAL := ( PNEWBUIL * NEWBUIL )


R_LOAN_REHAB[ecl] := 1 - R_CASH_REHAB[ecl]
R_LOAN_NewBUIL[ecl] := 1 - R_CASH_NewBUIL[ecl]

Payback_REHAB[ecl] := (UC_K_REHAB[ecl]*BUIL_D[ecl] - UC_K[ecl]*BUIL_D[ecl])/(UC_E[ecl] - UC_E_REHAB[ecl]) - 1


@pv REHAB := sum( REHAB[ecl] on ecl )

CH_ENER_BUIL[ ecl] :=  sum(CH_ENER_BUIL[ecl, ceb] on ceb)

CH_ENER_BUIL[ceb] :=  sum(CH_ENER_BUIL[ecl, ceb] on ecl)


@pv ENER_BUIL[ ecl] := sum(ENER_BUIL[ ecl, ceb] on ceb)

@pv ENER_BUIL := sum(ENER_BUIL[ ecl] on ecl)

@pv CH_ENER_BUIL :=  sum(CH_ENER_BUIL[ecl] on ecl)

PENER_BUIL[ceb] * ENER_BUIL[ceb] := sum(PENER_BUIL[ecl, ceb] * ENER_BUIL[ecl, ceb] on ecl)

phi[ecl, ceb] := (PCH[ceb]*CH_ENER_BUIL[ecl, ceb]) / (sum(PCH[cebb]*CH_ENER_BUIL[ecl, cebb] on cebb))
