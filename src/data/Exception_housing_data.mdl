include ..\model\lists

###################################################################################
## Special data (inversion of eq. / modification of the equation / alias)
###################################################################################

BUIL := sum(BUIL[ecl] on ecl)
BUILbis := BUIL


phi_REHAB_n[ecl,ecl2] := phi_REHAB[ecl,ecl2]

tau_REHAB_N[ecl] := tau_REHAB[ecl] 

tau_REHAB_trend[ecl] := tau_REHAB[ecl] 

GR_PENER_m2_e[ecl] := GR_PRICES

UC_K_REHABbis[ecl] := UC_K_REHAB[ecl]


DEBT_REHAB_Val[ecl] := @elem(R_LOAN_REHAB[ecl] * ( 1 + GR_NOMI ) / ( GR_NOMI + R_RMBS_REHAB[ecl] ) * PREHAB[ecl] * REHAB[ecl], %baseyear) * ( 1 +  GR_NOMI) ^ ( @year - %baseyear )


DEBT_NewB_Val[ecl] := @elem(R_LOAN_NewBUIL[ecl] * ( 1 + GR_NOMI ) / ( GR_NOMI + R_RMBS_NewBUIL[ecl] ) * PNewBUIL[ecl] * NewBUIL[ecl], %baseyear) * ( 1 +  GR_NOMI) ^ ( @year - %baseyear )




EXP_HOUSING_Val[ecl] := @elem( DEBT_REHAB_Val[ecl]{-1} * (R_I_REHAB[ecl]{-1} + R_RMBS_REHAB[ecl]{-1} ) _
                                                      + R_CASH_REHAB[ecl] * PREHAB[ecl] * REHAB[ecl] _
                                                      + DEBT_NewB_Val[ecl]{-1} * ( R_I_NewBUIL[ecl]{-1} + R_RMBS_NewBUIL[ecl]{-1} ) _
                                                      + R_CASH_NewBUIL[ecl] * PNewBUIL[ecl] * NewBUIL[ecl] _
                                                      + PENER_BUIL[ecl] * ENER_BUIL[ecl] , %baseyear) * ( 1 +  GR_NOMI) ^ ( @year - %baseyear )


ENERperM2[ ecl, ceb] := ENER_BUIL[ ecl, ceb] / BUIL[ ecl]  


PENER_BUIL[ecl, ceb] := PCH[ceb] * (CH_ENER_BUIL[ecl, ceb] + eps)/ (ENER_BUIL[ecl, ceb] + eps)
# Use of eps to avoid a conditionnonality in Exception_housing_data_if (For some reason the compilator does not recognize it whereas it was working in a previous version).
# PENER_BUIL[ecl, ceb] := if(ENER_BUIL[ecl, ceb] <> 0 , PEXP[ceb] * CH_ENER_BUIL[ecl, ceb] / ENER_BUIL[ecl, ceb], P)


# Calibrated such that tau_REHAB_n[ecl] is at its baseyear value for the baseyear Payback_REHAB[ecl]. 
tau[ecl] := sigma[ecl]*Payback_REHAB[ecl] + log((tau_REHAB_MIN[ecl]-tau_REHAB_MAX[ecl])/(tau_REHAB[ecl]-tau_REHAB_MAX[ecl])-1)

# First derivative of the rehabilitation rate (tau_REHAB_MIN[ecl]) with respect to the log of payback time (Payback_REHAB[ecl])
nu_REHAB[ecl] := (tau_REHAB_MAX[ecl] - tau_REHAB_MIN[ecl]) * sigma[ecl] * Payback_REHAB[ecl] * EXP(tau[ecl] - sigma[ecl] * Payback_REHAB[ecl]) / (1 + EXP(tau[ecl] - sigma[ecl] * Payback_REHAB[ecl]))^2


NCH[ccon] := @elem(PNewBUIL * NewBUIL + PREHAB * REHAB, %baseyear) * ( 1 +  GR_REAL) ^ (@year - %baseyear)

SUBST_NRJperM2[ecl, ceb] := 0

# Prices

PCH_ENER_BUIL[ ecl] := P
PENER[ ecl] := P
PENER  := P

# Verif
Verif_BUILbis := 0
Verif_phi_REHAB[ecl] := 0
Verif_HYBRID := 0

verif_UC_K_REHAB[ecl] := 0

###################################################################################
## Directly from equations
###################################################################################
### But without the conditionnality on the year !!!!

NewBUIL[ecl] :=   phi_NewBUIL[ecl] * (d(BUIL) + BUIL[DES])


DEP_BUIL[ecl,bcl] := delta_BUIL[ecl,bcl]*BUIL[ecl]{-1}


BUIL[DES] := sum(DEP_BUIL[ecl,DES] on ecl)


@pv NEWBUIL := sum(NEWBUIL[ecl] on ecl)   


GAIN_REHAB[ecl,ecl2] := (UC_E[ecl] - UC_E[ecl2]) - ((1 - R_SUB[ecl,ecl2]) * PREHAB[ecl,ecl2])


UC_REHAB[ecl] := UC_K_REHAB[ecl] + UC_E_REHAB[ecl]
   
UC_E_REHAB[ecl] := sum(phi_REHAB[ecl,ecl2]*UC_E[ecl2] on ecl2)


UC[ecl] := UC_K[ecl] + UC_E[ecl]

UC_K_REHAB[ecl] := PREHAB_delta[ecl] * ( R_CASH_REHAB[ecl] + R_LOAN_REHAB[ecl] * R_I_REHAB[ecl]{-1} * LD_REHAB[ecl] / _
                                               ( 1 - ( 1 + R_I_REHAB[ecl]{-1})^( -LD_REHAB[ecl] ) ) )



UC_K[ecl] := ( PREHAB[ecl,ecl] / BUIL_D[ecl] ) * (R_CASH[ecl] + R_LOAN[ecl] * R_I_BUIL[ecl]{-1} * LD[ecl] / _
                 ( 1 - ( 1 + R_I_BUIL[ecl]{-1}) ^( -LD[ecl] ) ) )
   
R_LOAN[ecl] := 1 - R_CASH[ecl]
   
UC_E[ ecl] := PENER_m2[ ecl] * ( ((1 + GR_PENER_m2_e[ ecl]) ^ BUIL_D[ ecl] - 1) / (GR_PENER_m2_e[ ecl] * BUIL_D[ ecl]) )

PENER_m2[ecl]  := PENER_BUIL[ecl] * ENER_BUIL[ecl]/BUIL[ecl] 

PREHAB_delta[ecl] := sum( (1 - R_SUB[ecl,ecl2]) * PREHAB[ecl,ecl2] * phi_REHAB[ecl,ecl2] / REHAB_D[ecl2]  on ecl2)

UC_K_REHAB[ecl,ecl2] := (1 - R_SUB[ecl,ecl2]) * (PREHAB[ecl,ecl2] / REHAB_D[ecl2] * ( R_CASH_REHAB[ecl] + R_LOAN_REHAB[ecl] * R_I_REHAB[ecl]{-1} * LD_REHAB[ecl] / ( 1 - ( 1 + R_I_REHAB[ecl]{-1})^( -LD_REHAB[ecl] ) ) ))

 
EXP_HOUSING_Val := sum(EXP_Housing_Val[ecl] on ecl)
  
EXP_REHAB_VAL := PREHAB * REHAB
 
EXP_NEWBUIL_VAL := ( PNEWBUIL * NEWBUIL )


R_LOAN_REHAB[ecl] := 1 - R_CASH_REHAB[ecl]
R_LOAN_NewBUIL[ecl] := 1 - R_CASH_NewBUIL[ecl]

Payback_REHAB[ecl] := (UC_K_REHAB[ecl]*BUIL_D[ecl] - UC_K[ecl]*BUIL_D[ecl])/(UC_E[ecl] - UC_E_REHAB[ecl]) - 1

   
@pv REHAB := sum( REHAB[ecl] on ecl )

CH_ENER_BUIL[ ecl] :=  sum(CH_ENER_BUIL[ecl, ceb] on ceb)
    
CH_ENER_BUIL[ceb] :=  sum(CH_ENER_BUIL[ecl, ceb] on ecl) 
 
 
@pv ENER_BUIL[ ecl] := sum(ENER_BUIL[ ecl, ceb] on ceb)
   
@pv ENER_BUIL := sum(ENER_BUIL[ ecl] on ecl)
   
@pv CH_ENER_BUIL :=  sum(CH_ENER_BUIL[ecl] on ecl)
   
PENER_BUIL[ceb] * ENER_BUIL[ceb] := sum(PENER_BUIL[ecl, ceb] * ENER_BUIL[ecl, ceb] on ecl)
          
phi[ecl, ceb] := (PCH[ceb]*CH_ENER_BUIL[ecl, ceb]) / (sum(PCH[cebb]*CH_ENER_BUIL[ecl, cebb] on cebb))
