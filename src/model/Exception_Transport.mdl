include ..\model\lists
 

##### Transport

## This file provides the equations defining the hybrid block on transport.

#### Link with the rest of the model

# ##! Necessary (minimum) households' final consumption for energy commodity $cea$ consumed by automobiles
d(log(NCH_AUTO[cea])) = (@year>%baseyear) * (d(log(CH_AUTO[cea]))) + (@year<=%baseyear) * (d(log(NCH_AUTO[cea]{-1}))) 

##! Necessary (minimum) households' final consumption for public transport commodities $cth$
d(log(NCH[cth])) = (@year>%baseyear) * (d(log(Km_traveler[cth]))) + (@year<=%baseyear) * (d(log(NCH[cth]{-1})))  if Km_traveler[cth] <> 0 

# ##! Necessary (minimum) households' final consumption for vehicles commodity $cveh$
NCH[cveh] = ( @year > %baseyear ) * @elem(PnewAUTO,%baseyear) * NewAUTO + ( @year <= %baseyear ) * (NCH[cveh]{-1} * ( 1 + GR_REAL ) )

##! Price of (long) distance transport by train  
d(log(P_km_traveler[crai])) = d(log(PCH[crai]))

##! Price of (short) distance transport by road
d(log(P_km_traveler[croa])) = d(log(PCH[croa]))

#### Arbitrage between transport modes 
## The arbitrage between transport modes is defined in 5 level. Level 1 determine the evolution of air, long and short distance transport. In level 2, the consummer may substitutie bewteen long distance transport types (automobile and train) and short distance transport types (automobile and bus). Level 3 defines the arbitrage between electric and thermic automobile whereas level 4 defines the arbitrage between automobile class. In level 5, substitution between types of thermic automobiles may be introduced. \\

### Level 1: Determination of air, long and short distance transport

##! Kilometer-travelers for air transport
d(log(Km_traveler[cair])) = (@year>%baseyear)*(1.5 * d(log(DISPINC_AT_VAL/PCH)) - 0.7 * d(log(PCH[cair])-log(PCH)))

##! Kilometer-travelers for long distance transport (by automobile and train)      
d(log(km_traveler_LD)) = (@year>%baseyear)*(0.6 * d(log(DISPINC_AT_VAL/PCH)) - 0.4 * d(log(P_km_traveler_LD/PCH)))

##! Price of long distance Kilometer-traveler (automobile and train)   
P_km_traveler_LD * km_traveler_LD = P_km_traveler[crai] * km_traveler[crai] + P_km_trav_auto_LD * km_trav_auto_LD

# Replace the previous approximation below:
# d(log(P_km_traveler_LD)) = (km_traveler[crai]{-1} * d(log(PCH[crai])) + km_trav_auto_LD{-1} * d(log(P_km_trav_auto_LD))) / (km_traveler[crai]{-1} + km_trav_auto_LD{-1})
 
##! Kilometer-travelers for short distance transport (by automobile and bus)     
d(log(km_traveler_SD)) = (@year>%baseyear)*(0.4*d(log(DISPINC_AT_VAL/PCH)) - 0.3 * d(log(P_km_traveler_SD/PCH)))

##! Price of short distance  Kilometer-traveler (by automobile and bus)    
P_km_traveler_SD * km_traveler_SD = P_km_traveler[croa] * km_traveler[croa] + P_km_trav_auto_SD * km_trav_auto_SD

# Replace the previous approximation below:
# d(log(P_km_traveler_SD)) = (km_traveler[croa]{-1} * d(log(PCH[croa])) + km_trav_auto_SD{-1} * d(log(PCH_auto_SD))) / (km_traveler[croa]{-1} + km_trav_auto_SD{-1})

### Level 2: Arbitrage between long distance transport (automobile and train)
 
##! Share of Kilometer-travelers by automobile into the long distance Kilometer-travelers
phi_km_trav_auto_LD = P_km_trav_auto_LD * km_trav_auto_LD / (P_km_traveler_LD * km_traveler_LD)

##! Kilometer-travelers for long distance by automobile 
d(log(km_trav_auto_LD)) = (@year > %baseyear) * (d(log(km_traveler_LD)) _
                              +  0.5 * (1 - phi_km_trav_auto_LD{-1}) * d(log(P_km_trav_auto_LD)-log(P_km_traveler[crai]))) 

##! Kilometer-travelers for transport by train 
d(log(km_traveler[crai])) = (@year>%baseyear)*(d(log(km_traveler_LD)) _
                              -  0.5 * phi_km_trav_auto_LD{-1} * d(log(P_km_traveler[crai])-log(P_km_trav_auto_LD)))
    
### Level 2: Arbitrage between short distance transport (automobile and bus)
##! Kilometer-travelers for short distance by automobile 
d(log(km_trav_auto_SD)) = (@year > %baseyear) * (d(log(km_traveler_SD)) _ 
                             - 0.2 * (1 - phi_km_trav_auto_SD{-1}) * d(log(P_km_trav_auto_SD)-log(P_km_traveler[croa])))

##! Share of Kilometer-travelers by automobile into the short distance Kilometer-travelers
phi_km_trav_auto_SD = P_km_trav_auto_SD * km_trav_auto_SD / (P_km_traveler_SD * km_traveler_SD)

##! Kilometer-travelers for transport by road (bus)
d(log(km_traveler[croa])) = (@year > %baseyear) * (d(log(km_traveler_SD)) _ 
                             - 0.2 * phi_km_trav_auto_SD{-1} * d(log(P_km_traveler[croa])-log(P_km_trav_auto_SD))) 

#### Transport by automobile
##! Kilometers for long distance by automobile 
d(log(km_AUTO_LD)) = (@year > %baseyear) * (d(log(km_trav_auto_LD)) - d(log(travperauto_LD)))

##! Kilometers for short distance by automobile 
d(log(km_AUTO_SD)) = (@year > %baseyear) * (d(log(km_trav_auto_SD)) - d(log(travperauto_SD)))

##! Total kilometers by automobile 
km_AUTO = km_AUTO_LD + km_AUTO_SD

##! Automobiles stock
d(log(AUTO)) = (@year > %baseyear) * (d(log(km_AUTO)) - d(log(kmPerAuto))) 

# Automobiles stock (for verification)
AUTObis = sum(AUTO[ecl] on ecl)

##! New automobiles
NewAUTO = (@year >  %baseyear)*(d(AUTO) + AUTO[DES]) _
            + (@year <= %baseyear) * NewAUTO{-1}

### Level 3: Arbitrage between automobile price classes 

##! New automobiles of class $ecl$
NewAUTO[ecl] = phi_NewAUTO[ecl] * NewAUTO

##! Utility of a automobile of class $ecl$
d(U_AUTO[ecl]) = (@year > %baseyear) * (-0.76 * d(UC_K_AUTO[ecl]) - 0.2 * d(UC_E_AUTO[ecl]))
## This utility is a function of the gain from the rehabilitation. For convenience it is calibrated as equal to \operatorname{log} $\phi_NewAUTO_{ecl}$ at the base year. The coefficients of the utility function are derived from the study of \citet{durrmeyer2017rebate}. \\
# Durrmeyer, I., & Samano, M. (2017). To rebate or not to rebate: Fuel economy standards versus feebates. The Economic Journal, 128(616), 3076-3116. 

##! Exponential sum of the utilities of automobile per class
SUM_EXP_U_AUTO = sum(EXP(U_AUTO[ecl]) on ecl)

##! Notional share of class $ecl$ automobile
phi_NewAUTO_n[ecl] = EXP(U_AUTO[ecl])/SUM_EXP_U_AUTO  if phi_NewAUTO_n[ecl] <> 0

##! Share of class $ecl$ automobiles
phi_NewAUTO[ecl] = ADJUST_phi_NewAUTO * phi_NewAUTO_n[ecl] + (1 - ADJUST_phi_NewAUTO) * phi_NewAUTO[ecl]{-1} if phi_NewAUTO[ecl] <> 0
## Notice that ADJUST_phi_NewAUTO is commun to every class transition. This guaranty that sum(phi_NewAUTO[ecl] on ecl2) = 1. \\

### Level 4: Arbitrage between electric and thermic automobile per classes 

##! New electric automobiles of class $ecl$
NewAUTO[ecl,cele] = phi_NewAUTO[ecl,cele] * NewAUTO[ecl]
## Every class of electric car has no emission. But their energy consumption vary per km. \\  

##! Share of class $ecl$ electric automobile
phi_NewAUTO[ecl,cele] = phi_NewAUTO_n[ecl,cele]*(phi_NewAUTO_n[ecl,cele]<=1) + (phi_NewAUTO_n[ecl,cele]=1)

##! Notional share of class $ecl$ electric automobile
d(phi_NewAUTO_n[ecl,cele]) / (1-phi_NewAUTO_n[ecl,cele]{-1}) = innovation_exo[ecl] + innovation[ecl] + imitation[ecl] * phi_NewAUTO_n[ecl,cele]{-1}
## The adoption of electric automobile is modeled according to Bass Diffusion Model \citep{bass1969new}. The parameters of the model are calibrated using the study of  \citet{taszka2017cost}. \\ 
# Bass, F. M. (1969). A new product growth for model consumer durables. Management science, 15(5), 215-227.
# Taszka, S., Domergue, S., Poret, M., & Monnoyer-Smith, L. (2017). Cost-benefit analysis of electrical vehicles. Cars.

##! Bass innovation parameter for class $ecl$ electric automobile
d(innovation[ecl]) = ES_BASS[ecl]*d((2*UC_AUTO[ecl,cele])^(-nu_diffusion[ecl])/((2*UC_AUTO[ecl,cele])^(-nu_diffusion[ecl])+(UC_AUTO[ecl,th])^(-nu_diffusion[ecl])))      

##! New thermic automobiles of class $ecl$
NewAUTO[ecl,th] = NewAUTO[ecl] - NewAUTO[ecl,cele] 

##! New thermic automobiles of class $ecl$ (for verification)
NewAUTO_bis[ecl,th] = NewAUTO[ecl,coil] + NewAUTO[ecl,cgas]


### Level 5: Arbitrage between types of thermic automobiles

##! New thermic automobiles fueled with oil of class $ecl$
NewAUTO[ecl,coil] = phi_NewAUTO[ecl,coil] * NewAUTO[ecl,th] if NewAUTO[ecl,coil]  <> 0

##! New thermic automobiles fueled with gas of class $ecl$
NewAUTO[ecl,cgas] = NewAUTO[ecl,th] - NewAUTO[ecl,coil]  if NewAUTO[ecl,cgas]  <> 0

##! Share of New thermic automobiles fueled with oil of class $ecl$
d(phi_NewAUTO[ecl,coil]) = 0
## For simplicity, the share of the different types of thermic automobiles is assumed constant. Arbitrage between types of thermic automobiles can be added by modifying the above equation. \\


### Level 5: Stock of automobiles

##! Stock of class $ecl$ electric automobiles
d(AUTO[ecl,cele]) = (@year>%baseyear)*(NewAUTO[ecl,cele] - AUTO[ecl,cele,DES])

##! Stock of class $ecl$ thermic automobiles
AUTO[ecl,th]  = AUTO[ecl,coil] + AUTO[ecl,cgas]
# replace d(AUTO[ecl,th])   = (@year>%baseyear)*(NewAUTO[ecl,th]   - AUTO[ecl,th,DES]  )

##! Stock of class $ecl$ automobiles
AUTO[ecl] = AUTO[ecl,cele] + AUTO[ecl,th]

##! Class $ecl$ electric automobiles destroyed
AUTO[ecl,cele,DES] = delta_AUTO[ecl,cele,DES]*AUTO[ecl,cele]{-1}

##! Class $ecl$ thermic automobiles destroyed
AUTO[ecl,th,DES] = AUTO[ecl,coil,DES] + AUTO[ecl,cgas,DES] 
# replace AUTO[ecl,th,DES] = delta_AUTO[ecl,th,DES]*AUTO[ecl,th]{-1}

##! Class $ecl$ automobiles destroyed
AUTO[ecl,DES] = AUTO[ecl,cele,DES] + AUTO[ecl,th,DES]

##! Automobiles destroyed
AUTO[DES] = sum(AUTO[ecl, DES] on ecl)


##! Stock of class $ecl$ thermic automobiles fueled with oil 
d(AUTO[ecl,coil])   = (@year>%baseyear)*(NewAUTO[ecl,coil]   - AUTO[ecl,coil,DES]  )

##! Class $ecl$ thermic automobiles fueled with oil destroyed
AUTO[ecl,coil,DES] = delta_AUTO[ecl,coil,DES]*AUTO[ecl,coil]{-1}

##! Stock of class $ecl$ thermic automobiles fueled with gas
d(AUTO[ecl,cgas])   = (@year>%baseyear)*(NewAUTO[ecl,cgas]   - AUTO[ecl,cgas,DES]  )

##! Class $ecl$ thermic automobiles fueled with gas destroyed
AUTO[ecl,cgas,DES] = delta_AUTO[ecl,cgas,DES]*AUTO[ecl,cgas]{-1}

##! Electric automobiles
AUTO[cele] = sum(AUTO[ecl,cele] on ecl)

##! Thermic automobiles
AUTO[th] = sum(AUTO[ecl,th] on ecl)

##! Electric automobiles destroyed
AUTO[cele,DES] = sum(AUTO[ecl,cele,DES] on ecl)

##! Thermic automobiles destroyed
AUTO[th,DES] = sum(AUTO[ecl,th,DES] on ecl)

### User cost of automobile

PE_AUTO[ecl,cea] * AUTO[ecl,cea] = PCH[cea] * CH_AUTO[cea] * CH_AUTO_toe[ecl,cea] / CH_AUTO_toe[cea]	if AUTO[ecl,cea] <> 0

UC_E_AUTO[ecl,cea] = PE_AUTO[ecl,cea] * ((1 + GR_PE_AUTO_e[ecl,cea]) ^ AUTO_D[ecl,cea] - 1) / (GR_PE_AUTO_e[ecl,cea] * AUTO_D[ecl,cea]) if AUTO[ecl,cea] <> 0
##! Growth rate of the energy price per square meter paid in class $ecl$ buildings
GR_PE_AUTO_e[ecl,cea] = (@year>%baseyear) * (ADJUST_GR_PE_AUTO_e_1 * @pchy( PE_AUTO[ecl,cea]{-1} ) _
                        + (1-ADJUST_GR_PE_AUTO_e_1) * GR_PE_AUTO_e[ecl,cea]{-1}) + (@year<=%baseyear)*GR_PRICES  if AUTO[ecl,cea] <> 0



UC_K_AUTO[ecl,cea] = (1 - R_SUB_AUTO[ecl,cea]) * PNewAUTO[ecl,cea] / AUTO_D[ecl,cea] * (R_CASH_AUTO[ecl,cea] +   _
      R_LOAN_AUTO[ecl,cea] * R_I_AUTO[ecl,cea]{-1} * LD_AUTO[ecl,cea] / ( 1 - ( 1 + R_I_AUTO[ecl,cea]{-1} )^( - LD_AUTO[ecl,cea] ) ) )



##! Interest rate paid for an investment in a class $ecl$ automobile
d(R_I_AUTO[ecl,cea]) = d(R)


### Debts

##! Debt related to the purshase of a new  building of a class $ecl$
# DEBT_NewB_Val[ecl] = (@year > %baseyear) * ( ( 1 - R_RMBS_NewBUIL[ecl] ) * DEBT_NewB_Val[ecl]{-1} _
#                                                  + R_LOAN_NewBUIL[ecl] * PNewBUIL[ecl] * NewBUIL[ecl] ) _
#                                                  + (@year =< %baseyear) * DEBT_NewB_Val[ecl]{-1} * ( 1 + GR_NOMI )



######################
######################


##! User cost of  an automobile of class $ecl$
UC_AUTO[ecl] = UC_K_AUTO[ecl] + UC_E_AUTO[ecl] 					if AUTO[ecl] <> 0

##! User cost of an electric automobile of class $ecl$
UC_AUTO[ecl,cele] = UC_K_AUTO[ecl,cele] + UC_E_AUTO[ecl,cele] 	if AUTO[ecl,cele] <> 0

##! User cost of a thermic automobile of class $ecl$
UC_AUTO[ecl,th] = UC_K_AUTO[ecl,th] + UC_E_AUTO[ecl,th] 		if AUTO[ecl,th] <> 0

##! User cost of a thermic automobile of class $ecl$ fueled with oil
UC_AUTO[ecl,coil] = UC_K_AUTO[ecl,coil] + UC_E_AUTO[ecl,coil] 	if AUTO[ecl,coil] <> 0

##! User cost of a thermic automobile of class $ecl$ fueled with gas
UC_AUTO[ecl,cgas] = UC_K_AUTO[ecl,cgas] + UC_E_AUTO[ecl,cgas] 	if AUTO[ecl,cgas] <> 0

##! User capital cost of  an automobile of class $ecl$
UC_K_AUTO[ecl] * AUTO[ecl] = UC_K_AUTO[ecl,cele] * AUTO[ecl,cele] + UC_K_AUTO[ecl,th] * AUTO[ecl,th] 			if AUTO[ecl] <> 0

##! User capital cost of a thermic automobile of class $ecl$
UC_K_AUTO[ecl,th] * AUTO[ecl,th] = UC_K_AUTO[ecl,coil] * AUTO[ecl,coil] + UC_K_AUTO[ecl,cgas] * AUTO[ecl,cgas] 	if AUTO[ecl,th] <> 0

##! User energy cost of  an automobile of class $ecl$
UC_E_AUTO[ecl] * AUTO[ecl] = UC_E_AUTO[ecl,cele] * AUTO[ecl,cele] + UC_E_AUTO[ecl,th] * AUTO[ecl,th] 			if AUTO[ecl] <> 0

##! User energy cost of a thermic automobile of class $ecl$
UC_E_AUTO[ecl,th] * AUTO[ecl,th] = UC_E_AUTO[ecl,coil] * AUTO[ecl,coil] + UC_E_AUTO[ecl,cgas] * AUTO[ecl,cgas]	if AUTO[ecl,th] <> 0




### Households' energy consumption related to transport

##! Kilometers by electric automobile of class $ecl$
km_AUTO[ecl,cele] = km_AUTO * AUTO[ecl,cele] / AUTO     if km_AUTO[ecl,cele]    <> 0

##! Kilometers by class $ecl$ thermic automobiles fueled with oil
km_AUTO[ecl,coil] = km_AUTO * AUTO[ecl,coil] / AUTO     if km_AUTO[ecl,coil] <> 0
 
##! Kilometers by class $ecl$ thermic automobiles fueled with gas
km_AUTO[ecl,cgas] = km_AUTO * AUTO[ecl,cgas] / AUTO     if km_AUTO[ecl,cgas] <> 0 

##! Kilometers by class $ecl$ 
km_AUTO[ecl] = km_AUTO[ecl,cele] +km_AUTO[ecl,coil] + km_AUTO[ecl,cgas] 

##! Total kilometers by automobile
km_AUTObis = sum(km_AUTO[ecl] on ecl)

##! Energy consumption of class $ecl$ automobiles fueled with electricity expressed in tonne of oil equivalent
CH_AUTO_toe[ecl,cele] = km_AUTO[ecl,cele]    * toePerKm[ecl,cele]   if CH_AUTO_toe[ecl,cele]  <> 0

##! Energy consumption of class $ecl$ automobiles fueled with oil expressed in tonne of oil equivalent
CH_AUTO_toe[ecl,coil] = km_AUTO[ecl,coil] * toePerKm[ecl,coil]   if CH_AUTO_toe[ecl,coil]  <> 0

##! Energy consumption of class $ecl$ automobiles fueled with gas expressed in tonne of oil equivalent
CH_AUTO_toe[ecl,cgas] = km_AUTO[ecl,cgas] * toePerKm[ecl,cgas]   if CH_AUTO_toe[ecl,cgas]  <> 0

##! Energy consumption of automobiles fueled with electricity expressed in tonne of oil equivalent
CH_AUTO_toe[cele] = sum(CH_AUTO_toe[ecl,cele] on ecl)

##! Energy consumption of automobiles fueled with oil expressed in tonne of oil equivalent
CH_AUTO_toe[coil] = sum(CH_AUTO_toe[ecl,coil] on ecl)

##! Energy consumption of automobiles fueled with gas expressed in tonne of oil equivalent
CH_AUTO_toe[cgas] = sum(CH_AUTO_toe[ecl,cgas] on ecl)

##! Households' final consumption of electricity (expressed in monetary unit)
d(log(CH_AUTO[cele])) = d(log(CH_AUTO_toe[cele]))

##! Households' final consumption of oil (expressed in monetary unit)
d(log(CH_AUTO[coil])) = d(log(CH_AUTO_toe[coil]))

##! Households' final consumption of gas (expressed in monetary unit)
d(log(CH_AUTO[cgas])) = d(log(CH_AUTO_toe[cgas]))





# ####################
# ############ VERIF
verif_AUTObis = (AUTObis/AUTO - 1)*100 if AUTO <> 0
verif_km_AUTObis = (km_AUTObis/km_AUTO - 1)*100 if km_AUTO <> 0

verif_NewAUTObis[ecl,th] = (NewAUTO_bis[ecl,th]/NewAUTO[ecl,th]-1)*100 if NewAUTO[ecl,th] <> 0

verif_phi_NewAUTO[ecl] = (1 - (sum((phi_NewAUTO[ecl2]^2)^(1/2) on ecl2)))*100
# Squared specification to avoid negative phi_NewAUTO[ecl]
