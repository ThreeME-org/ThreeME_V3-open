### Margins c domesticly produced (value & volume):
##d(log(MGRD[c])) = d(log(MGR[c]))  
### More general: impose stable share, use logit for substutions
#### MGRD[c] = MGR[c] * YQ[c] / (YQ[c]+M[c])
##### Valeur réelement nécessaire? NON
#
### Margins c imported (value & volume):
#
## MGRM[c] = MGR[c] * M[c] / (YQ[c]+M[c])
### More general: impose stable share, use logit for substututions
##d(log(MGRM[c])) = d(log(MGR[c]))  


# Level III




# Notional Demand for imported material c of the sector

# equation 2.25
MATM[cm, s] = (MAT[cm, s] - MATD[cm, s] > 0) * (MAT[cm, s] - MATD[cm, s]) + (MAT[cm, s] - MATD[cm, s] =< 0) * (0.00001) if MATM[cm, s] <> 0

d(SUBST_MATM_n[cm, s]) = -ES_CIM($s, $cm) * d(log(PMATM[cm]) - log(PMATD[cm])) * (PMATD[cm]{-1}*MATD[cm, s]{-1} / (PMAT[cm, s]{-1}*MAT[cm, s]{-1})) if MATM[cm, s] <> 0

# Notional Demand for domestic material c of the sector

# equation 2.26
d(log(MATD[cm, s])) = d(log(MAT[cm, s])) + d(SUBST_MATD[cm, s]) if MATD[cm, s] <> 0

d(SUBST_MATD_n[cm, s]) = -ES_CIM($s, $cm) * d(log(PMATD[cm]) - log(PMATM[cm])) * (PMATM[cm]{-1} * MATM[cm, s]{-1} / (PMAT[cm, s]{-1} * MAT[cm, s]{-1})) if (MATM[cm, s] <> 0) * (MATD[cm, s])

# Notional Demand for imported energy c of the sector

# equation 2.27
EM[ce, s] = (E[ce, s] - ED[ce, s] > 0) * (E[ce, s] - ED[ce, s]) + (E[ce, s] - ED[ce, s] =< 0) * 0.00001 if EM[ce, s] <> 0

d(SUBST_EM_n[ce, s]) = -ES_CIM($s, 20 + $ce) * d(log(PEM[ce]) - log(PED[ce])) * (PED[ce]{-1} * ED[ce, s]{-1}/(PE[ce, s]{-1} * E[ce, s]{-1})) if (EM[ce, s] <> 0) * (ED[ce, s] <> 0)

# Notional Demand for domestic Energy c of the sector

# equation 2.28
d(log(ED[ce, s])) = d(log(E[ce, s])) + d(SUBST_ED[ce, s]) if ED[ce, s] <> 0

d(SUBST_ED_n[ce, s]) = -ES_CIM($s, 20 + $ce) * d(log(PED[ce]) - log(PEM[ce])) * (PEM[ce]{-1} * EM[ce, s]{-1} / (PE[ce, s]{-1} * E[ce, s]{-1})) if (EM[ce, s] <> 0) * (ED[ce, s] <> 0)

# Allocation of Investment between domestic and import (Imports)

# equation 2.29
IAM[c, s] = (IA[c, s] - IAD[c, s] > 0) * (IA[c, s] - IAD[c, s]) + (IA[c, s] - IAD[c, s] =< 0) * (0.00001) if IAM[c, s] <> 0

d(SUBST_IAM_n[c, s]) = -ES_IAM($s, $c) * d(log(PIAM[c]) - log(PIAD[c])) * (PIAD[c]{-1} * IAD[c, s]{-1} / (PIA[c, s]{-1} * IA[c, s]{-1})) if (IAM[c, s] <> 0) * (IAD[c, s] <> 0)

# Allocation of Investment between domestic and import (Domestic)

# equation 2.30
d(log(IAD[c, s])) = d(log(IA[c, s])) + d(SUBST_IAD[c, s]) if IAD[c, s] <> 0

d(SUBST_IAD_n[c, s]) = -ES_IAM($s, $c) * d(log(PIAD[c]) - log(PIAM[c])) * (PIAM[c]{-1} * IAM[c, s]{-1} / (PIA[c, s]{-1} * IA[c, s]{-1})) if (IAM[c, s] <> 0) * (IAD[c, s] <> 0)

# equation 2.31 & 2.33
PMT|O|[trsp] * MT|O|[trsp] = -|V|[trsp] / (YQ[trsp] + M[trsp]) * _
                      ( sum(value(MTD[trsp, c] + MTM[trsp, c]) if MT|O|[trsp, c] <> 0 on c in %list_com \ %list_trsp)  ) _
                      if MT|O|[trsp] <> 0 where (O, V) in (D M, YQ M)

# equation 2.32 & 2.34
MT|O|[trsp] = -|V|[trsp] / (YQ[trsp] + M[trsp]) * _
                                    ( sum(MTD[trsp, c] + MTM[trsp, c] if MT|O|[trsp, c] <> 0 on c in %list_com \ %list_trsp) ) _
                                    if MT|O|[trsp] <> 0 where (O, V) in (D M, YQ M)

# equation 2.35 - 2.38
PMC|O|[ccm] * MC|O|[ccm] = -|V|[ccm] / (YQ[ccm] + M[ccm]) * (sum(value(MCM[c] + MCD[c]) on c in %list_com \ %list_com_commarg)) if MC|O|[ccm] <> 0 where (O, V) in (D M, YQ M)

MC|O|[ccm] = -|V|[ccm] / (YQ[ccm] + M[ccm]) * (sum(MCM[c] + MCD[c] on c in %list_com \ %list_com_commarg)) if MC|O|[ccm] <> 0 where (O, V) in (D M, YQ M)


# Government consumption

# equations 3.75 & 3.76
PEXPG[c] = PG[c]
d(log(EXPG[c])) = d(log(EXPG)) if EXPG[c] <> 0

# equation 3.77
d(log(GD[c])) = d(log(EXPG[c])) + d(SUBST_GD[c]) if GD[c] <> 0
d(SUBST_GD_n[c]) = - ES_GOV(1, $c) * d(log(PGD[c]) - log(PGM[c])) * (PGM[c]{-1} * GM[c]{-1}/(PG[c]{-1} * G[c]{-1})) if GD[c] <> 0

#equation 3.78
GM[c] = (EXPG[c] - GD[c] > 0 ) * (EXPG[c]-GD[c]) + (EXPG[c]-GD[c] =< 0)*(0.00001) if GM[c] <> 0
d(SUBST_GM_n[c])= - ES_GOV(1, $c) * d(log(PGM[c]) - log(PGD[c])) * (PGD[c]{-1} * GD[c]{-1}/(PG[c]{-1} * G[c]{-1})) if GM[c] <> 0



# Exports

# La variable World Demand (WD) est exogene
# equation 2.39
d(log(X[c])) = d(log(WD[c])) + d(SUBST_X[c]) if X[c] <> 0
d(SUBST_X_n[c]) = -ES_X($c, 1) * d(log(PX[c]) - log(TC * PWD[c])) if X[c] <> 0

# equation 2.40
d(log(XD[c])) = d(log(X[c])) + d(SUBST_XD[c]) if X[c] <> 0
XM[c] = (X[c] - XD[c] > 0) * (X[c] - XD[c]) + (X[c] - XD[c] <= 0) * (0.00001) if XM[c] <> 0

# equation 2.41
d(SUBST_X|O1|_n[c]) = -ES_X($c, 2) * d(log(PX|O1|[c]) - log(PX|O2|[c])) * (PX|O2|[c]{-1} * X|O2|[c]{-1} / (PX[c]{-1} * X[c]{-1})) if X|O1|[c] <> 0 where (O1, O2) in (D M, M D)

# Commercial Balance

# equation 2.42
DC_VAL[c] = PX[c] * X[c] - PM[c] * M[c]

# equation 2.43
DC_VAL = sum(DC_VAL[c] on c)