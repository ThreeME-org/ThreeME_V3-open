# BLOCK 8: OTHER EQUATIONS

# AJUSTMENT EQUATIONS AND ANTICIPATION


## Mark-up adjustments
MARKUP[s] = ADJUST_MARKUP[s] * MARKUP_n[s] + (1 - ADJUST_MARKUP[s]) * MARKUP[s]{-1} if Y[s] > 0


## Expected price
## The Error Correction Model garanty that the expected and effective price are equal in the long run
d(log(P_e)) = ADJUST_Pe_P1 * d(log(P{-1})) + (1 - ADJUST_Pe_P1) * d(log(P_e{-1})) - ADJUST_Pe_PeP1*log(P_e{-1}/P{-1})

## EXpected production
d(log(Y_e[s])) = ADJUST_Ye_Y[s] * d(log(Y[s])) + (1 - ADJUST_Ye_Y[s]) * d(log(Y_e[s]{-1})) 



# Adjustment for Labor, Energy and Material of sector s
log(F[f, s]) = ADJUST0_F[f, s] * log(F_n[f, s]) + (1 - ADJUST0_F[f, s]) * (log(F[f, s]{-1}) + d(log(F_e[f, s]))) if F[f, s] <> 0 where f in %list_F \ K

d(log(F_e[f, s])) = ADJUST1_F[f, s] * d(log(F_e[f, s]{-1})) + ADJUST2_F[f, s] * d(log(F[f, s]{-1})) + ADJUST3_F[f, s] * d(log(F_n[f, s])) if F_e[f, s] <> 0 where f in %list_F \ K



## Capital stock of sector s
F[K, s] = (1 - Rdep[s]) * F[K, s]{-1} + IA[s] if F[K, s] <> 0

## Investment in sector s
## Put IMPULSE! + Conditionnalité sur IA!!!
## Explain this equation
d(log(IA[s])) = ADJUST_IA_Ye[s] * d(log(Y_e[s])) + ADJUST_IA_IA1[s] * d(log(IA[s]{-1}))  + ADJUST_IA_SUBST[s] * d(SUBST_F[K, s]) + ADJUST_IA_Kn[s] * (log(F_n[K, s]{-1}) - log(F[K, s]{-1})) if F[K, s] <> 0


SUBST_F[f, s] = ADJUST6_F[f, s] * SUBST_n_F[f, s] + (1 - ADJUST6_F[f, s]) * SUBST_F[f, s]{-1} if F[f, s] <> 0


SUBST_MGPD[cc, c] = ADJUST6_MGPD[cc, c] * SUBST_n_MGPD[cc, c] + (1 - ADJUST6_MGPD[cc, c]) * SUBST_MGPD[cc, c]{-1} if MGPD[cc, c] <> 0

SUBST_MGPM[cc, c] = ADJUST6_MGPM[cc, c] * SUBST_n_MGPM[cc, c] + (1 - ADJUST6_MGPM[cc, c]) * SUBST_MGPM[cc, c]{-1} if MGPM[cc, c] <> 0


SUBST_CI[ce, s] = ADJUST6_CI[ce, s] * SUBST_n_CI[ce, s] + (1 - ADJUST6_CI[ce, s]) * SUBST_CI[ce, s]{-1} if CI[ce, s] <> 0

SUBST_CI[ct, s] = ADJUST6_CI[ct, s] * SUBST_n_CI[ct, s] + (1 - ADJUST6_CI[ct, s]) * SUBST_CI[ct, s]{-1} if CI[ct, s] <> 0

SUBST_|V|M[c] = ADJUST6_|V|M[c] * SUBST_n_|V|M[c] + (1 - ADJUST6_|V|M[c]) * SUBST_|V|M[c]{-1} if |V|M[c] <> 0 where V in MGR CH G X

SUBST_|V|M[c, s] = ADJUST6_|V|M[c, s] * SUBST_n_|V|M[c, s] + (1 - ADJUST6_|V|M[c, s]) * SUBST_|V|M[c, s]{-1} if |V|M[c, s] <> 0 where V in CI I


SUBST_X[c] = ADJUST6_X[c] * SUBST_n_X[c] + (1 - ADJUST6_X[c]) * SUBST_X[c]{-1} if X[c] <> 0


# Adjustment for the consumption of commodity c
log(CH[c]) = ADJUST0_CH[c] * log(CH_n[c]) + (1 - ADJUST0_CH[c]) * (log(CH[c]{-1}) + d(log(CH_e[c]))) if CH[c] <> 0

d(log(CH_e[c])) = ADJUST1_CH[c] * d(log(CH_e[c]{-1})) + ADJUST2_CH[c] * d(log(CH[c]{-1})) + ADJUST3_CH[c] * d(log(CH_n[c])) if CH_e[c] <> 0


log(PY[s]) = ADJUST0_PY[s] * log(PY_n[s]) + (1 - ADJUST0_PY[s]) * (log(PY[s]{-1}) + d(log(PY_e[s])))

d(log(PY_e[s])) = ADJUST1_PY[s] * d(log(PY_e[s]{-1})) + ADJUST2_PY[s] * d(log(PY[s]{-1})) + ADJUST3_PY[s] * d(log(PY_n[s]))


# Wage
d(log(W[s])) = ADJUST_W_Wn[s] * d(log(W_n[s])) + ADJUST_W_W1[s] * d(log(W[s]{-1})) - ADJUST_W_W1Wn1[s]*log(W[s]{-1}/W_n[s]{-1}) if W[s] <> 0


### Mettre eventuellememnt en niveau car c'est un taux.
### D'une manière générale, classer les équations d'ajustement!
log(PARTR) = ADJUST0_PARTR * log(PARTR_n) + (1 - ADJUST0_PARTR) * (log(PARTR{-1}) + d(log(PARTR_e)))

d(log(PARTR_e)) = ADJUST1_PARTR * d(log(PARTR_e{-1})) + ADJUST2_PARTR * d(log(PARTR{-1})) + ADJUST3_PARTR * d(log(PARTR_n))


# Interest rate
## Virer expected quand pas de dérives? 

R = ADJUST0_R * R_n + (1 - ADJUST0_R) * (R{-1} + d(R_e))
d(R_e) = ADJUST1_R * d(R_e{-1}) + ADJUST2_R * d(R{-1}) + ADJUST3_R * d(R_n)


# For property incomes
log(PROP_INC_VAL) = ADJUST0_PROP_INC_VAL * log(PROP_INC_VAL_n) + (1 - ADJUST0_PROP_INC_VAL) * (log(PROP_INC_VAL{-1}) + d(log(PROP_INC_VAL_e))) if PROP_INC_VAL <> 0

d(log(PROP_INC_VAL_e)) = ADJUST1_PROP_INC_VAL * d(log(PROP_INC_VAL_e{-1})) + ADJUST2_PROP_INC_VAL * d(log(PROP_INC_VAL{-1})) + ADJUST3_PROP_INC_VAL * d(log(PROP_INC_VAL_n)) if PROP_INC_VAL_e <> 0


